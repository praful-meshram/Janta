/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.42
 * Generated at: 2014-03-12 11:20:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import javax.naming.*;
import javax.sql.*;
import java.io.*;
import java.text.*;
import java.util.*;

public final class print_005fdelivered_005forder_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("<title>Printing...</title>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n");
      out.write("<style>\n");
      out.write(".boldtable,.boldtable TD,.boldtable TH {\n");
      out.write("\tfont-family: serif;\n");
      out.write("\tfont-size: 9pt;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".boldtable1,.boldtable1 TD,.boldtable1 TH {\n");
      out.write("\tfont-family: serif;\n");
      out.write("\tfont-size: 9pt;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t");

		DecimalFormat df = new DecimalFormat("###,###.00");
		DecimalFormat dfQty = new DecimalFormat("0.000");
		DecimalFormat dfQty1 = new DecimalFormat("0");

		String orderDate = "", sentDate = "";
		int totalItems = 0;
		int totalbags = 0;
		int totalTaken = 0;
		int balanceItmes = 0;
		int taken_ind = 0;
		int itemsPerPage = 15;
		int pageItemCount = 0;
		int emptyLines = 0;
		int itemQtyCheck = 0;
		float totalValue = 0.0f;
		String enteredBy = "";

		float itemRate = 0.0f;
		float itemQty = 0.0f;
		float itemTotPrice = 0.0f;
		float itemMRP = 0.0f;
		float totalValueMRP = 0.0f;
		float savings = 0.0f;
		float totalValueDis = 0.0f;
		float itemTotDis = 0.0f;
		float other_charges = 0.0f;

		String itemName = "";
		String itemWeight = "";
		String custCode = "";
		String custName = "";
		String building = "";
		String buildingNo = "";
		String block = "";
		String wing = "";
		String add1 = "";
		String add2 = "";
		String area = "";
		String phone = "";
		String codeValue = "";
		String categoryCode = "";
		String storeName = "";
		String storeAdd1 = "";
		String storePhone = "";
		String billMessage = "";
		String disRemark = "";
		String p_type = "";
		String station = "";
		String deliveryRemark = "";
		String advance = "";
		String discount = "";
		String balance = "";
		String change_amt = "";
		String deliveryPerson = "";
		String mobile = "";
		int i = 0;

		String[] orderno;
		String orderStr = "";
		orderStr = request.getParameter("orderNo");
		orderno = orderStr.split(",");
		String query = "";
		Connection conn = null;
		Statement stat = null;
		ResultSet rs = null;
		try {
			Context initContext = new InitialContext();
			Context envContext = (Context) initContext
					.lookup("java:/comp/env");
			DataSource ds = (DataSource) envContext.lookup("jdbc/js");
			conn = ds.getConnection();
			stat = conn.createStatement();

			query = "select code,value from code_table where code in ('StoreName','StoreAdd1','StorePhone','BILLMSG')";
			rs = stat.executeQuery(query);

			while (rs.next()) {
				categoryCode = rs.getString(1);
				codeValue = rs.getString(2);

				if (categoryCode.equals("BILLMSG")) {
					billMessage = codeValue;
				}

				if (categoryCode.equals("StoreName")) {
					storeName = codeValue;
				}

				if (categoryCode.equals("StoreAdd1")) {
					storeAdd1 = codeValue;
				}

				if (categoryCode.equals("StorePhone")) {
					storePhone = codeValue;
				}

			}
			rs.close();
			
			for (int cnt = 0; cnt < orderno.length; cnt++) {
				
				query = "select DATE_FORMAT(a.sent_datetime,'%d/%m/%y %r'), a.total_items, a.total_taken, a.total_value, "
						+ "a.total_value_mrp, a.enterd_by,a.total_value_discount,a.remark, "
						+ "b.rate, b.qty, b.price, b.mrp, b.item_discount, b.remark,e.payment_type_desc, b.item_taken, "
						+ "d.item_name, d.item_weight, c.custcode,c.custname,c.building,c.building_no,c.block,c.wing,c.add1, "
						+ "c.add2,c.phone, c.area, c.station,a.advance_amt,a.discount_amt,a.balance_amt,f.dstaff_name, "
						+ "a.other_charges, a.change_amt ,a.bags, c.mobile from orders a, order_detail b, customer_master c, item_master d ,payment_type e, "
						+ "delivery_staff f where a.order_num = b.order_num "
						+ "and a.custcode = c.custcode "
						+ "and b.item_code = d.item_code "
						+ "and a.payment_type_code = e.payment_type_code "
						+ "and a.dstaff_code=f.dstaff_code and a.order_num = '"
						+ orderno[cnt]
						+ "' "
						+ "order by b.entry_no limit " + 1 + "";
				System.out.println("query "+query);
				rs = stat.executeQuery(query);
				int ctr = 0, j = 0, itemCount = 0;
				if(cnt%2==0){
				
      out.write("\n");
      out.write("\t\t\t\t<table style=\"width: 100%\">\n");
      out.write("\t\t\t\t<tr><td>\n");
      out.write("\t\t\t\t");
 
				} else {
				
      out.write("\n");
      out.write("\t\t\t\t<td>\n");
      out.write("\t\t\t\t");

				}
				while (rs.next()) {

					i = 1;
					itemCount = itemCount + 1;
					pageItemCount = pageItemCount + 1;

					//orderDate=rs.getString(i++);
					sentDate = rs.getString(i++);
					totalItems = rs.getInt(i++);
					totalTaken = rs.getInt(i++);
					totalValue = rs.getFloat(i++);
					totalValueMRP = rs.getFloat(i++);
					enteredBy = rs.getString(i++);
					totalValueDis = rs.getFloat(i++);
					deliveryRemark = rs.getString(i++);

					itemRate = rs.getFloat(i++);
					itemQty = rs.getFloat(i);
					itemQtyCheck = rs.getInt(i++);

					itemTotPrice = rs.getFloat(i++);
					itemMRP = rs.getFloat(i++);
					itemTotDis = rs.getFloat(i++);
					disRemark = rs.getString(i++);

					p_type = rs.getString(i++);
					taken_ind = rs.getInt(i++);

					itemName = rs.getString(i++);
					itemWeight = rs.getString(i++);
					custCode = rs.getString(i++);
					custName = rs.getString(i++);
					building = rs.getString(i++);
					buildingNo = rs.getString(i++);
					block = rs.getString(i++);
					wing = rs.getString(i++);
					add1 = rs.getString(i++);
					add2 = rs.getString(i++);
					phone = rs.getString(i++);
					area = rs.getString(i++);
					station = rs.getString(i++);
					advance = rs.getString(i++);
					discount = rs.getString(i++);
					balance = rs.getString(i++);
					deliveryPerson = rs.getString(i++);
					other_charges = rs.getFloat(i++);
					change_amt = rs.getString(i++);
					totalbags = rs.getInt(i++);
					mobile = rs.getString(i++);
					if (advance == null)
						advance = "0";

					if (discount == null)
						discount = "0";

					if (balance == null)
						balance = "0";

					balanceItmes = totalItems - totalTaken;

					if (ctr == 0) {
	
      out.write("\n");
      out.write("\t<table class='boldtable'  width=360 >\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td width=\"15%\">Order </td>\n");
      out.write("\t\t\t<td>:</td>\n");
      out.write("\t\t\t<td>");
      out.print(orderno[cnt]);
      out.write("</td>\n");
      out.write("\t\t\t<td>Date </td>\n");
      out.write("\t\t\t<td>: </td>\n");
      out.write("\t\t\t<td colspan=\"4\">");
      out.print(sentDate);
      out.write("</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>Code </td>\n");
      out.write("\t\t\t<td>:</td>\n");
      out.write("\t\t\t<td>");
      out.print(custCode);
      out.write("</td>\n");
      out.write("\t\t\t");

				if (!deliveryRemark.equals("")) {
			
      out.write("\n");
      out.write("\t\t\t<td>Name </td>\n");
      out.write("\t\t\t<td>:</td>\n");
      out.write("\t\t\t<td colspan=\"4\">");
      out.print(custName);
      out.write(" (DI: ");
      out.print(deliveryRemark);
      out.write(")</td>\n");
      out.write("\t\t\t");

				} else if (deliveryRemark.equals("")) {
			
      out.write("\n");
      out.write("\t\t\t<td>Name </td>\n");
      out.write("\t\t\t<td>:</td>\n");
      out.write("\t\t\t<td colspan=\"4\"> ");
      out.print(custName);
      out.write("</td>\n");
      out.write("\t\t\t");

				}
			
      out.write("\n");
      out.write("\t\t</tr>\n");
      out.write("\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td  colspan=\"9\">Address : ");
      out.print(buildingNo);
      out.write(',');
      out.write(' ');
      out.print(wing);
      out.write(',');
      out.write(' ');
      out.print(block);
      out.write(',');
      out.write(' ');
      out.print(building);
      out.write(',');
      out.print(area);
      out.write(',');
      out.print(add1);
      out.write(',');
      out.print(add2);
      out.write(',');
      out.write(' ');
      out.print(station);
      out.write("</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t<td>Phone</td>\n");
      out.write("\t\t<td>:</td>\n");
      out.write("\t\t<td colspan=\"7\">");
      out.print(phone);
      out.write(", mob: ");
      out.print(mobile);
      out.write("</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr  width=\"100%;\">\n");
      out.write("\t\t\t<td colspan=\"9\"  width=\"100%;\">\n");
      out.write("\t\t\t\t<table  width=\"100%;\">\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td width=\"22%;\">Items </td>\n");
      out.write("\t\t\t\t\t\t<td width=\"1%;\">:</td>\n");
      out.write("\t\t\t\t\t\t<td width=\"20%;\"> ");
      out.print(totalItems);
      out.write("</td>\n");
      out.write("\t\t\t\t\t\t");

						if (other_charges <= 0) {
						
      out.write("\n");
      out.write("\t\t\t\t\t\t<td  width=\"29%;\">Total Amt</td>\n");
      out.write("\t\t\t\t\t\t<td  width=\"1%;\">: </td>\n");
      out.write("\t\t\t\t\t\t<td  width=\"25%;\">");
      out.print(totalValue);
      out.write("</td>\n");
      out.write("\t\t\t\t\t\t");

						} else if (other_charges >= 0) {
						
      out.write("\n");
      out.write("\t\t\t\t\t\t<td>Total </td>\n");
      out.write("\t\t\t\t\t\t<td>:</td>\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(totalValue);
      out.write("(Dlv:");
      out.print(other_charges);
      out.write(")</td>\n");
      out.write("\t\t\t\t\t\t");

						}
						double adamt = 0.0f;
						if (advance != null && discount != null) {
							adamt = Double.parseDouble(advance)+ Double.parseDouble(discount);
						}
						
      out.write("\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td>Bags</td>\n");
      out.write("\t\t\t\t\t\t<td>:</td>\n");
      out.write("\t\t\t\t\t\t<td> ");
      out.print(totalbags);
      out.write("</td>\n");
      out.write("\t\t\t\t\t\t<td>Adv/Dis</td>\n");
      out.write("\t\t\t\t\t\t<td>:</td>\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(adamt);
      out.write("</td>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td>Pay Type</td>\n");
      out.write("\t\t\t\t\t\t<td>:</td>\n");
      out.write("\t\t\t\t\t\t<td> ");
      out.print(p_type);
      out.write("</td>\n");
      out.write("\t\t\t\t\t\t<td>Change</td>\n");
      out.write("\t\t\t\t\t\t<td>:</td>\n");
      out.write("\t\t\t\t\t\t<td> ");
      out.print(change_amt);
      out.write("</td>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td>Balance</td>\n");
      out.write("\t\t\t\t\t\t<td>:</td>\n");
      out.write("\t\t\t\t\t\t<td> ");
      out.print(balance);
      out.write("</td>\n");
      out.write("\t\t\t\t\t\t");

						double amtdue = 0.0f;
						if (balance != null && change_amt != null) {
							amtdue = Double.parseDouble(balance)+ Double.parseDouble(change_amt);
						}
						
      out.write("\n");
      out.write("\t\t\t\t\t\t<td>Amt Due</td>\n");
      out.write("\t\t\t\t\t\t<td>:</td>\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(amtdue);
      out.write("</td>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t</table>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>Del By </td><td>:</td><td><b> ");
      out.print(deliveryPerson);
      out.write("</b></td>\n");
      out.write("\t\t\t<td colspan=\"5\">I have checked my items.</td><td></td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t</table>\n");
      out.write("\t");

		ctr = ctr + 1;
					}
					savings = totalValueMRP - totalValue;
					if (savings < 0)
						savings = 0.0f;
	
      out.write('\n');
      out.write('	');

		}
	
      out.write('\n');
      out.write('\n');
      out.write('	');

		if(cnt%2==0){
		
      out.write("\n");
      out.write("\t\t\t</td>\n");
      out.write("\t\t");
 }else{
		
      out.write("\n");
      out.write("\t\t\t</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t");
if((cnt+1)%4!=0){ 
      out.write("\n");
      out.write("\t\t<tr><td colspan=\"9\">&nbsp;</td></tr>\n");
      out.write("\t\t<tr><td colspan=\"9\">&nbsp;</td></tr>\n");
      out.write("\t\t");
}
		System.out.println(cnt+1+"  Count");
		}
		if((cnt+1)%4==0){
			if(orderno.length!=(cnt+1)){
				
      out.write("\n");
      out.write("\t\t\t\t\t</table><p style=\"page-break-after:always;\">&nbsp;</p>\n");
      out.write("\t\t\t\t");

			}
		}
	}
			rs.close();
			stat.close();
			conn.close();
		} catch (Exception e) {
			System.out.println(e);
			e.printStackTrace();
			rs.close();
			stat.close();
			conn.close();
		}
	
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("function Fun_Print(){\n");
      out.write("     self.print();\n");
      out.write("     back();\n");
      out.write("}\n");
      out.write("function back(){\n");
      out.write("\tvar backPage=\"\";\n");
      out.write("\tbackPage =\"");
      out.print(request.getParameter("backPage"));
      out.write("\";\n");
      out.write("\twindow.location = backPage;\n");
      out.write("}\n");
      out.write("window.onload = function() {\n");
      out.write("\t//alert(\"loading\");\n");
      out.write("\tFun_Print();\n");
      out.write("}\n");
      out.write("\t</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
